{"version":3,"sources":["webpack:///./src/app/modules/user-managment/components/add-update-user-wrapper/add-update-user-wrapper.component.html","webpack:///./src/app/modules/user-managment/components/add-update-user-wrapper/add-update-user-wrapper.component.scss","webpack:///./src/app/modules/user-managment/components/add-update-user-wrapper/add-update-user-wrapper.component.ts","webpack:///./src/app/modules/user-managment/components/user-management-list/user-management-list.component.html","webpack:///./src/app/modules/user-managment/components/user-management-list/user-management-list.component.scss","webpack:///./src/app/modules/user-managment/components/user-management-list/user-management-list.component.ts","webpack:///./src/app/modules/user-managment/components/user-misc-input/user-misc-input.component.html","webpack:///./src/app/modules/user-managment/components/user-misc-input/user-misc-input.component.scss","webpack:///./src/app/modules/user-managment/components/user-misc-input/user-misc-input.component.ts","webpack:///./src/app/modules/user-managment/components/user-preferences-input/user-preferences-input.component.html","webpack:///./src/app/modules/user-managment/components/user-preferences-input/user-preferences-input.component.scss","webpack:///./src/app/modules/user-managment/components/user-preferences-input/user-preferences-input.component.ts","webpack:///./src/app/modules/user-managment/user-management-routing.module.ts","webpack:///./src/app/modules/user-managment/user-managment.module.ts"],"names":[],"mappings":"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","file":"src-app-modules-user-managment-user-managment-module.js","sourcesContent":["module.exports = \"<div>\\r\\n    <app-user-misc-input [isUpdate]=\\\"this.isUpdate\\\" [miscForm]=\\\"this.miscForm\\\"></app-user-misc-input>\\r\\n</div>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci1tYW5hZ21lbnQvY29tcG9uZW50cy9hZGQtdXBkYXRlLXVzZXItd3JhcHBlci9hZGQtdXBkYXRlLXVzZXItd3JhcHBlci5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { telephoneValidation } from 'src/app/shared/validation/customValidations';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/core/services/user-service/user.service';\r\nimport { User } from 'src/app/shared/models/user';\r\nimport { Organisation } from './../../../../shared/models/organisation';\r\n\r\n@Component({\r\n  selector: 'app-add-update-user-wrapper',\r\n  templateUrl: './add-update-user-wrapper.component.html',\r\n  styleUrls: ['./add-update-user-wrapper.component.scss']\r\n})\r\nexport class AddUpdateUserWrapperComponent implements OnInit {\r\n  miscForm: FormGroup;\r\n  isUpdate: boolean;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private userService: UserService) {\r\n      console.log(location);\r\n    this.miscForm = fb.group({\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      telephone: ['', [Validators.required, telephoneValidation]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      roles: [[], [Validators.required]],\r\n      organisations: [[], [Validators.required]]\r\n    }, {updateOn: 'submit'});\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      if (!!params['id']) {\r\n        this.isUpdate = true;\r\n        const id: number = +params['id'];\r\n        this.userService._allUsers.subscribe(users => {\r\n          const userToUpdate = users.find(user => user.id === id);\r\n          this.initVals(userToUpdate);\r\n        });\r\n      } else {\r\n        this.isUpdate = false;\r\n      }\r\n    });\r\n  }\r\n  initVals(userToUpdate: User): void {\r\n    userToUpdate.entitlements.forEach((entitlement: string) => {\r\n      console.log(entitlement);\r\n      const copyRoles = this.miscForm.get('roles').value;\r\n      copyRoles.push(entitlement);\r\n      this.miscForm.patchValue({roles: copyRoles});\r\n    });\r\n    userToUpdate.memberships.forEach((entitlement: Organisation) => {\r\n      const copyOrgs = this.miscForm.get('organisations').value;\r\n      copyOrgs.push(entitlement.id);\r\n      this.miscForm.patchValue({organisations: copyOrgs});\r\n    });\r\n    this.miscForm.patchValue({\r\n      firstName: userToUpdate.firstname,\r\n      lastName: userToUpdate.lastname,\r\n      email: userToUpdate.email,\r\n      telephone: userToUpdate.telephone\r\n    });\r\n  }\r\n\r\n}\r\n","module.exports = \"<div class=\\\"list-group\\\">\\r\\n    <div *ngFor=\\\"let user of allUsers\\\" class=\\\"row list-group-item justify-content-center\\\">\\r\\n        <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n              <h5 class=\\\"col-md-\\\"><b>{{user.lastname}}</b>\\r\\n                {{user.firstname}}</h5>\\r\\n                <p class=\\\"col text-muted\\\">{{user.telephone}}</p>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n          <p class=\\\"text-muted\\\">{{user.email}}</p>\\r\\n              \\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div *ngFor=\\\"let entitlement of user.entitlements\\\" >\\r\\n                <div class=\\\"chip\\\">{{entitlement}}</div>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n              <div *ngFor=\\\"let membership of user.memberships\\\" >\\r\\n                  <div class=\\\"chip\\\">{{membership.name}}</div>\\r\\n              </div>\\r\\n            </div>\\r\\n            \\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 col-sm-12\\\">\\r\\n          <button (click)=\\\"changeView(user)\\\" class=\\\"btn btn-color waves-light\\\" mdbWavesEffect> <i class=\\\"fa fa-edit\\\"></i>\\r\\n            Ändern</button>\\r\\n            <button (click)=\\\"deleteUser(user)\\\" class=\\\"btn btn-color waves-light\\\" mdbWavesEffect> <i class=\\\"fa fa-trash\\\"></i>\\r\\n              Löschen</button>\\r\\n        </div>\\r\\n      </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \".list-group-item {\\n  display: flex; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kdWxlcy91c2VyLW1hbmFnbWVudC9jb21wb25lbnRzL3VzZXItbWFuYWdlbWVudC1saXN0L0M6XFxVc2Vyc1xcY2hyaXNcXFNvdXJjZSBDb2RlXFxHaXRIdWJcXGJmay1wb3J0YWxcXGJmay1wb3J0YWwtY2xpZW50L3NyY1xcYXBwXFxtb2R1bGVzXFx1c2VyLW1hbmFnbWVudFxcY29tcG9uZW50c1xcdXNlci1tYW5hZ2VtZW50LWxpc3RcXHVzZXItbWFuYWdlbWVudC1saXN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksY0FBYSxFQUNoQiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci1tYW5hZ21lbnQvY29tcG9uZW50cy91c2VyLW1hbmFnZW1lbnQtbGlzdC91c2VyLW1hbmFnZW1lbnQtbGlzdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0LWdyb3VwLWl0ZW17XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG59Il19 */\"","import { Component, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { User } from 'src/app/shared/models/user';\r\nimport { UserService } from 'src/app/core/services/user-service/user.service';\r\nimport { NavbarButtonsService } from 'src/app/core/services/navbar-buttons-service/navbar-buttons.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-management-list',\r\n  templateUrl: './user-management-list.component.html',\r\n  styleUrls: ['./user-management-list.component.scss']\r\n})\r\nexport class UserManagementListComponent implements OnInit {\r\n\r\n  allUsers: Array < User > = [];\r\n\r\n  constructor(private changeDetector: ChangeDetectorRef,\r\n    private userService: UserService,\r\n    private navbarButtons: NavbarButtonsService,\r\n    private router: Router) {}\r\n\r\n  ngOnInit() {\r\n    this.navbarButtons.changeToListUserManagementView();\r\n    this\r\n      .userService\r\n      ._allUsers\r\n      .subscribe(users => {\r\n        this.allUsers = [];\r\n        this.allUsers = users;\r\n      });\r\n  }\r\n  changeView(user: User) {\r\n   this.router.navigate(['home/user-management/update/' + user.id]);\r\n  }\r\n  deleteUser(user) {\r\n    this\r\n      .userService\r\n      ._userToDelete\r\n      .next(user);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\r\\n<form [formGroup]=\\\"miscForm\\\" (ngSubmit)=\\\"next()\\\" >\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <input mdbInput mdbValidate formControlName=\\\"firstName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n        <label class=\\\"label-color\\\">Vorname</label>\\r\\n        <mdb-error *ngIf=\\\"firstName.invalid && (firstName.dirty || firstName.touched)\\\">\\r\\n            <span *ngIf=\\\"firstName.errors.required\\\">Vorname wird benötigt</span>\\r\\n          </mdb-error>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <input mdbInput mdbValidate formControlName=\\\"lastName\\\" type=\\\"text\\\" class=\\\"form-control\\\">\\r\\n        <label class=\\\"label-color\\\">Nachname</label>\\r\\n        <mdb-error *ngIf=\\\"lastName.invalid && (lastName.dirty || lastName.touched)\\\">\\r\\n            <span *ngIf=\\\"lastName.errors.required\\\">Nachname wird benötigt</span>\\r\\n          </mdb-error>\\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <input mdbInput mdbValidate formControlName=\\\"email\\\" type=\\\"email\\\" class=\\\"form-control\\\">\\r\\n        <label class=\\\"label-color\\\">E-mail</label>\\r\\n        <mdb-error *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\">\\r\\n            <span *ngIf=\\\"email.errors.required\\\">E-mail wird benötigt</span>\\r\\n            <span *ngIf=\\\"email.errors.email\\\">E-mail nicht richtig</span>\\r\\n          </mdb-error>\\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  \\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"md-form\\\">\\r\\n        <input mdbInput mdbValidate formControlName=\\\"telephone\\\" type=\\\"tel\\\" class=\\\"form-control\\\">\\r\\n        <label class=\\\"label-color\\\">Telefonnummer</label>\\r\\n        <mdb-error *ngIf=\\\"telephone.invalid && (telephone.dirty || telephone.touched)\\\">\\r\\n            <span *ngIf=\\\"telephone.errors.required\\\">Telefonnummer wird benötigt</span>\\r\\n            <span *ngIf=\\\"telephone.errors.phoneNumberNotValid\\\">Telefonnummer nicht richtig</span>\\r\\n          </mdb-error>\\r\\n      </div>\\r\\n  \\r\\n    </div>\\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <div class=\\\"row mt-4\\\">\\r\\n    <div class=\\\"col md-form\\\">\\r\\n      <mdb-select #roleSelect mdbValidate [highlightFirst]=\\\"false\\\" formControlName=\\\"roles\\\" [options]=\\\"allRolesMultiSelect\\\"\\r\\n        [multiple]=\\\"true\\\" class=\\\"colorful-select dropdown-primary\\\"></mdb-select>\\r\\n      <label class=\\\"label-color\\\">Rollen auswählen</label>\\r\\n      <mdb-error *ngIf=\\\"roles.invalid && (roles.dirty || roles.touched)\\\">\\r\\n          <span *ngIf=\\\"roles.errors.required\\\">Rollen wird benötigt</span>\\r\\n        </mdb-error>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row mt-4\\\">\\r\\n    <div class=\\\"col md-form\\\">\\r\\n      <mdb-select mdbValidate #organisationSelect [highlightFirst]=\\\"false\\\" formControlName=\\\"organisations\\\"\\r\\n        [options]=\\\"allOrganisationsMultiSelect\\\" [multiple]=\\\"true\\\" class=\\\"colorful-select dropdown-primary\\\"></mdb-select>\\r\\n      <label class=\\\"label-color\\\">Organisation auswählen</label>\\r\\n      <mdb-error *ngIf=\\\"organisations.invalid && (organisations.dirty || organisations.touched)\\\">\\r\\n          <span *ngIf=\\\"organisations.errors.required\\\">Organisationen werden benötigt</span>\\r\\n        </mdb-error>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div><p class=\\\" mt-5 text-muted text-center\\\">Seite 1 von 2</p></div>\\r\\n  <div class=\\\"mt-5 d-flex justify-content-end\\\">\\r\\n    <button type=\\\"submit\\\" class=\\\"btn btn-color waves-light\\\" mdbWavesEffect>Nächste</button>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci1tYW5hZ21lbnQvY29tcG9uZW50cy91c2VyLW1pc2MtaW5wdXQvdXNlci1taXNjLWlucHV0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { OrganisationService } from 'src/app/core/services/organisation-service/organisation.service';\r\nimport { Organisation } from 'src/app/shared/models/organisation';\r\nimport { UserService } from 'src/app/core/services/user-service/user.service';\r\nimport { Subscription } from 'rxjs/internal/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-user-misc-input',\r\n  templateUrl: './user-misc-input.component.html',\r\n  styleUrls: ['./user-misc-input.component.scss']\r\n})\r\nexport class UserMiscInputComponent implements OnInit, OnDestroy {\r\n  allRoles: Array < string > = [];\r\n  allOrganisations: Array<Organisation> = [];\r\n  _allRolesSubscription: Subscription;\r\n  _allOrgsSubscription: Subscription;\r\n  allRolesMultiSelect: Array<{value: string, label: string}> = [];\r\n  allOrganisationsMultiSelect: Array<{value: number, label: string}> = [];\r\n  @Input() miscForm: FormGroup;\r\n  @Input() isUpdate: boolean;\r\n  constructor(private userService: UserService,\r\n    private organisationService: OrganisationService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.fetchRoles();\r\n    this.fetchOrganisations();\r\n    if (this.isUpdate) {\r\n      this.miscForm.get('roles').valueChanges.subscribe(data => {\r\n        if (data != null) {\r\n          this.fetchRoles();\r\n        }\r\n      });\r\n    } else {\r\n      this.fetchRoles();\r\n      this.fetchOrganisations();\r\n    }\r\n  }\r\n  get firstName() {return this.miscForm.get('firstName'); }\r\n  get lastName() {return this.miscForm.get('lastName'); }\r\n  get email() {return this.miscForm.get('email'); }\r\n  get telephone() {return this.miscForm.get('telephone'); }\r\n  get roles() {return this.miscForm.get('roles'); }\r\n  get organisations() {return this.miscForm.get('organisations'); }\r\n\r\n  fetchRoles() {\r\n    this._allRolesSubscription = this\r\n      .userService\r\n      .getRoles()\r\n      .subscribe(roles => {\r\n        this.allRoles = [];\r\n        this.allRoles = roles;\r\n        this.pushRolesIntoMultiSelect();\r\n      });\r\n  }\r\n  fetchOrganisations() {\r\n    this._allOrgsSubscription = this\r\n      .organisationService\r\n      ._allOrganisations\r\n      .subscribe(organisations => {\r\n        console.log(organisations);\r\n        this.allOrganisations = [];\r\n        this.allOrganisations = organisations;\r\n        this.pushOrganisationsIntoMultiSelect();\r\n      });\r\n  }\r\n\r\n  next() {\r\n    console.log(this.miscForm);\r\n  }\r\n  pushRolesIntoMultiSelect() {\r\n    this.allRolesMultiSelect = [];\r\n    this.allRoles.forEach(element => {\r\n      console.log(element);\r\n      this.allRolesMultiSelect.push({value: element, label: element});\r\n    });\r\n  }\r\n  pushOrganisationsIntoMultiSelect() {\r\n    this.allOrganisationsMultiSelect = [];\r\n    this.allOrganisations.forEach(organisation => {\r\n      this.allOrganisationsMultiSelect.push({value: organisation.id, label: organisation.name});\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    this._allOrgsSubscription.unsubscribe();\r\n    this._allRolesSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n","module.exports = \"<p>\\r\\n  user-preferences-input works!\\r\\n</p>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvdXNlci1tYW5hZ21lbnQvY29tcG9uZW50cy91c2VyLXByZWZlcmVuY2VzLWlucHV0L3VzZXItcHJlZmVyZW5jZXMtaW5wdXQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user-preferences-input',\r\n  templateUrl: './user-preferences-input.component.html',\r\n  styleUrls: ['./user-preferences-input.component.scss']\r\n})\r\nexport class UserPreferencesInputComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { RouterModule, Routes } from '@angular/router';\r\nimport { NgModule } from '@angular/core';\r\nimport { AddUpdateUserWrapperComponent } from './components/add-update-user-wrapper/add-update-user-wrapper.component';\r\nimport { UserManagementListComponent } from './components/user-management-list/user-management-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n      path: 'list',\r\n      component: UserManagementListComponent\r\n  },\r\n  {\r\n    path: 'add',\r\n    component: AddUpdateUserWrapperComponent\r\n  },\r\n  {\r\n    path: 'update/:id',\r\n    component: AddUpdateUserWrapperComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n\r\n\r\n\r\n  exports: [RouterModule]\r\n})\r\nexport class UserManagementRoutingModule {}\r\n","import { NgModule, NO_ERRORS_SCHEMA } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MDBSpinningPreloader,\r\n  InputsModule,\r\n  InputUtilitiesModule,\r\n  WavesModule,\r\n  ButtonsModule,\r\n  MaterialChipsModule,\r\n  SelectModule} from 'ng-uikit-pro-standard';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserManagementRoutingModule } from './user-management-routing.module';\r\nimport { AddUpdateUserWrapperComponent } from './components/add-update-user-wrapper/add-update-user-wrapper.component';\r\nimport { UserManagementListComponent } from './components/user-management-list/user-management-list.component';\r\nimport { UserMiscInputComponent } from './components/user-misc-input/user-misc-input.component';\r\nimport { UserPreferencesInputComponent } from './components/user-preferences-input/user-preferences-input.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserManagementListComponent,\r\n    AddUpdateUserWrapperComponent,\r\n    UserMiscInputComponent,\r\n    UserPreferencesInputComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    UserManagementRoutingModule,\r\n    MaterialChipsModule,\r\n    InputsModule,\r\n    InputUtilitiesModule,\r\n    WavesModule,\r\n    ButtonsModule,\r\n    SelectModule\r\n  ],\r\n  exports: [\r\n    UserManagementListComponent,\r\n    AddUpdateUserWrapperComponent,\r\n    UserMiscInputComponent,\r\n    UserPreferencesInputComponent\r\n  ],\r\n  schemas: [NO_ERRORS_SCHEMA],\r\n  providers: [MDBSpinningPreloader]\r\n})\r\nexport class UserManagementModule {}\r\n"],"sourceRoot":""}