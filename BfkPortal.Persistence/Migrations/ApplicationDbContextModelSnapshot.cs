// <auto-generated />
using System;
using BfkPortal.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BfkPortal.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("BfkPortal.Core.Models.Appointment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AreParticipantsOrganisations");

                    b.Property<DateTime?>("Deadline");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<DateTime>("From");

                    b.Property<bool>("IsVisible");

                    b.Property<int>("MaxParticipants");

                    b.Property<int?>("OwnerId");

                    b.Property<bool>("ShowParticipants");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("To");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Entitlement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("Entitlements");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Membership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OrganisationId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("UserId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Offer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ReceiverAppointmentId");

                    b.Property<int?>("ReceiverId");

                    b.Property<int?>("SenderAppointmentId");

                    b.Property<int?>("SenderId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverAppointmentId");

                    b.HasIndex("ReceiverId");

                    b.HasIndex("SenderAppointmentId");

                    b.HasIndex("SenderId");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Organisation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Organisations");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Participation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AppointmentId");

                    b.Property<int>("OrganisationId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("OrganisationId");

                    b.HasIndex("UserId");

                    b.ToTable("Participations");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Firstname")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Lastname")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Appointment", b =>
                {
                    b.HasOne("BfkPortal.Core.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Entitlement", b =>
                {
                    b.HasOne("BfkPortal.Core.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BfkPortal.Core.Models.User", "User")
                        .WithMany("Entitlements")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Membership", b =>
                {
                    b.HasOne("BfkPortal.Core.Models.Organisation", "Organisation")
                        .WithMany("Memberships")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BfkPortal.Core.Models.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Offer", b =>
                {
                    b.HasOne("BfkPortal.Core.Models.Appointment", "ReceiverAppointment")
                        .WithMany()
                        .HasForeignKey("ReceiverAppointmentId");

                    b.HasOne("BfkPortal.Core.Models.User", "Receiver")
                        .WithMany()
                        .HasForeignKey("ReceiverId");

                    b.HasOne("BfkPortal.Core.Models.Appointment", "SenderAppointment")
                        .WithMany()
                        .HasForeignKey("SenderAppointmentId");

                    b.HasOne("BfkPortal.Core.Models.User", "Sender")
                        .WithMany()
                        .HasForeignKey("SenderId");
                });

            modelBuilder.Entity("BfkPortal.Core.Models.Participation", b =>
                {
                    b.HasOne("BfkPortal.Core.Models.Appointment", "Appointment")
                        .WithMany("Participations")
                        .HasForeignKey("AppointmentId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BfkPortal.Core.Models.Organisation", "Organisation")
                        .WithMany("Participations")
                        .HasForeignKey("OrganisationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BfkPortal.Core.Models.User", "User")
                        .WithMany("Participations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
